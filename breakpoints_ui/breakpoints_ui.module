<?php
/**
 * @file
 * Provide structure for the administrative interface to Breakpoints.
 */

use \Drupal\breakpoints\Breakpoint;
use \Drupal\breakpoints\BreakpointSet;

/**
 * Implements hook_permission().
 */
function breakpoints_ui_permission() {
  return array(
    'administer breakpoints' => array(
      'title' => t('Administer Breakpoints'),
      'description' => t('Administer all breakpoints'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function breakpoints_ui_menu() {
  $items = array();
  $items['admin/config/media/breakpoints'] = array(
    'title' => t('Manage breakpoints'),
    'description' => t('Manage breakpoints and breakpoint sets.'),
    'page callback' => 'breakpoints_ui_admin_block_page',
    'access arguments' => array('administer breakpoints'),
  );
  $items['admin/config/media/breakpoints/breakpoint'] = array(
    'title' => 'Breakpoints',
    'page callback' => 'breakpoints_ui_breakpoint_page',
    'description' => 'Manage breakpoints',
    'access arguments' => array('administer breakpoints'),
    'weight' => 10,
    'file' => 'breakpoints_ui.breakpoint.admin.inc',
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items['admin/config/media/breakpoints/breakpoint/add'] = array(
    'title' => 'Add breakpoint',
    'page callback' => 'breakpoints_ui_breakpoint_page_add',
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'breakpoints_ui.breakpoint.admin.inc',
  );
  $items['admin/config/media/breakpoints/breakpoint/%breakpoints_breakpoint'] = array(
    'title' => 'Edit breakpoint',
    'page callback' => 'breakpoints_ui_breakpoint_page_edit',
    'page arguments' => array(5),
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_CALLBACK,
    'file' => 'breakpoints_ui.breakpoint.admin.inc',
  );
  $items['admin/config/media/breakpoints/breakpoint/%breakpoints_breakpoint/edit'] = array(
    'title' => 'Edit breakpoint',
    'page callback' => 'breakpoints_ui_breakpoint_page_edit',
    'page arguments' => array(5),
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_CALLBACK,
    'file' => 'breakpoints_ui.breakpoint.admin.inc',
  );
  $items['admin/config/media/breakpoints/breakpoint/%breakpoints_breakpoint/%'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('breakpoints_ui_breakpoint_action_confirm', 5, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_CALLBACK,
    'file' => 'breakpoints_ui.breakpoint.admin.inc',
  );


  // Breakpoint set
  $items['admin/config/media/breakpoints/breakpointset'] = array(
    'title' => 'Breakpoint Sets',
    'description' => 'Manage breakpoint sets',
    'access arguments' => array('administer breakpoints'),
    'weight' => 10,
    'page callback' => 'breakpoints_ui_breakpointset_page',
    'file' => 'breakpoints_ui.breakpointset.admin.inc',
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items['admin/config/media/breakpoints/breakpointset/add'] = array(
    'title' => 'Add breakpoint set',
    'page callback' => 'breakpoints_ui_breakpointset_page_add',
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'breakpoints_ui.breakpointset.admin.inc',
  );
  $items['admin/config/media/breakpoints/breakpointset/%breakpoints_breakpointset/edit'] = array(
    'title' => 'Edit breakpoint set',
    'page callback' => 'breakpoints_ui_breakpointset_page_edit',
    'page arguments' => array(5),
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_CALLBACK,
    'file' => 'breakpoints_ui.breakpointset.admin.inc',
  );
  $items['admin/config/media/breakpoints/breakpointset/%breakpoints_breakpointset/duplicate'] = array(
    'title' => 'Duplicate breakpoint set',
    'page callback' => 'breakpoints_ui_breakpoint_page_duplicate',
    'page arguments' => array(5),
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_CALLBACK,
    'access arguments' => array('administer breakpoints'),
    'file' => 'breakpoints_ui.breakpointset.admin.inc',
  );
  $items['admin/config/media/breakpoints/breakpointset/%breakpoints_breakpointset/%'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('breakpoints_ui_breakpointset_action_confirm', 5, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer breakpoints'),
    'type' => MENU_CALLBACK,
    'file' => 'breakpoints_ui.breakpointset.admin.inc',
  );

   $items['admin/config/media/breakpoints/multipliers'] = array(
    'title' => 'Multipliers',
    'description' => 'Manage multipliers',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('breakpoints_ui_multipliers_form'),
    'access arguments' => array('administer breakpoints'),
    'file' => 'breakpoints_ui.multiplier.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );

  $items['admin/config/media/breakpoints/multipliers/%/delete'] = array(
    'title' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('breakpoints_ui_admin_multiplier_delete_form', 5),
    'type' => MENU_CALLBACK,
    'access arguments' => array('administer breakpoints'),
    'file' => 'breakpoints_ui.multiplier.admin.inc',
    'weight' => 15,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function breakpoints_ui_theme() {
  return array(
    'breakpoints_ui_multipliers_table_form' => array(
      'render element' => 'form',
      'theme_key' => NULL,
      'file' => 'breakpoints_ui.multiplier.admin.inc'
    ),
  );
}

/**
 * Breakpoint uri callback.
 */
function breakpoints_breakpoint_uri(Breakpoint $breakpoint) {
  return array(
    'path' => 'admin/config/media/breakpoints/breakpoint/' . $breakpoint->id(),
  );
}

/**
 * Breakpointset uri callback.
 */
function breakpoints_breakpoint_set_uri(BreakpointSet $breakpointset) {
  return array(
    'path' => 'admin/config/media/breakpoints/breakpointset/' . $breakpointset->id(),
  );
}

/**
 * Page callback.
 */
function breakpoints_ui_admin_block_page() {
  $content = array(
    menu_get_item('admin/config/media/breakpoints/breakpoint'),
    menu_get_item('admin/config/media/breakpoints/breakpointset'),
    menu_get_item('admin/config/media/breakpoints/multipliers'),
  );
  return theme('admin_block_content', array('content' => $content));

}

/**
 * Implements hook_entity_info_alter().
 */
function breakpoints_ui_entity_info_alter(&$entity_info) {
  watchdog('alter', 'alter!');
  //Breakpoint
  $entity_info['breakpoints_breakpoint']['form controller class']['default'] = 'Drupal\breakpoints_ui\BreakpointFormController';
  $entity_info['breakpoints_breakpoint']['list controller class'] = 'Drupal\breakpoints_ui\BreakpointListController';
  $entity_info['breakpoints_breakpoint']['list path'] = 'admin/config/media/breakpoints/breakpoint';
  $entity_info['breakpoints_breakpoint']['uri callback'] = 'breakpoints_breakpoint_uri';

  //BreakpointSet
  $entity_info['breakpoints_breakpointset']['form controller class']['default'] = 'Drupal\breakpoints_ui\BreakpointSetFormController';
  $entity_info['breakpoints_breakpointset']['form controller class']['duplicate'] = 'Drupal\breakpoints_ui\BreakpointSetFormController';
  $entity_info['breakpoints_breakpointset']['list controller class'] = 'Drupal\breakpoints_ui\BreakpointSetListController';
  $entity_info['breakpoints_breakpointset']['list path'] = 'admin/config/media/breakpoints/breakpointset';
  $entity_info['breakpoints_breakpointset']['uri callback'] = 'breakpoints_breakpoint_set_uri';
}
